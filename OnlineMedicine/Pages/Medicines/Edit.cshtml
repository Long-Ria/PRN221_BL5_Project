@page
@model OnlineMedicine.Pages.Medicines.EditModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Medicine</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-page="Edit" method="post" id="imageForm">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <input type="hidden" name="mid" value="@Model.Medicine.Id" />
                <label asp-for="@Model.Medicine.Name" class="control-label"></label>
                <input type="text" required name="name" value="@Model.Medicine.Name" class="form-control" />
                <span asp-validation-for="@Model.Medicine.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.Medicine.Category" class="control-label"></label>
                <select name="category" class="form-control">
                    <option value="@Model.Medicine.Category.Id">@Model.Medicine.Category.Name</option>
                    @foreach (Models.Category c in Model.Categories)
                    {
                        <option value="@c.Id">@c.Name</option>
                    }

                </select>
            </div>
            <div class="form-group">
                <label asp-for="@Model.Medicine.Price" class="control-label"></label>
                <input name="price" required type="number" value="@Model.Medicine.Price" class="form-control" />
                <span asp-validation-for="@Model.Medicine.ExpiredDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.Medicine.Quantity" required class="control-label"></label>
                <input name="quantity" required type="number" value="@Model.Medicine.Quantity" class="form-control" />
                <span asp-validation-for="@Model.Medicine.ExpiredDate" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="@Model.Medicine.ExpiredDate" class="control-label"></label>
                <input name="expriedDate" required value="@Model.Medicine.ExpiredDate" type="date" class="form-control" />
                <span asp-validation-for="@Model.Medicine.ExpiredDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.Medicine.Image" class="control-label"></label>
                <a href="https://imgbb.com/" target="_blank">Get link of image</a>
                <textarea name="image" class="form-control" id="imageUrl">
                <img src="@Model.Medicine.Image" alt="alt" />
                </textarea>
                <span asp-validation-for="@Model.Medicine.Image" class="text-danger" id="error-message"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.Medicine.Descript" class="control-label"></label>
                <input type="text" required value="@Model.Medicine.Descript" name="descript" class="form-control" />
                <span asp-validation-for="@Model.Medicine.Descript" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.Medicine.MinAge" class="control-label"></label>
                <input type="number" required name="minAge" value="@Model.Medicine.MinAge" class="form-control" />
                <span asp-validation-for="@Model.Medicine.MinAge" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.Medicine.Type.Name" class="control-label"></label>
                <select name="typeId" class="form-control">
                    <option value="@Model.Medicine.Type.Id">@Model.Medicine.Type.Name</option>
                    @foreach (Models.Type c in Model.Types)
                    {
                        <option value="@c.Id">@c.Name</option>
                    }

                </select>
            </div>
            <div class="form-group">
                <label asp-for="@Model.Medicine.Country.Name" class="control-label"></label>
                <select name="country" class="form-control">
                    <option value="@Model.Medicine.Country.Id">@Model.Medicine.Country.Name</option>
                    @foreach (Models.Country c in Model.Countries)
                    {
                        <option value="@c.Id">@c.Name</option>
                    }
                </select>
            </div>


            <div class="form-group">
                <br />
                <input type="submit" value="Edit" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="List">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }


    <script src="https://cdn.tiny.cloud/1/3wv6oxgsvjimdah8bfe0t3g2w0ftpyzxcwylgy7txp6jbtj8/tinymce/6/tinymce.min.js" referrerpolicy="origin"></script>

    <script>
        tinymce.init({
            selector: 'textarea#imageUrl',
            plugins: 'image',
            toolbar: 'image',
            menubar: false,
            forced_root_block: '',
            force_br_newlines: false,
            force_p_newlines: false,
            content_style: 'body { font-family: Helvetica, Arial, sans-serif; font-size: 14px }',
            setup: function (editor) {
                editor.on('keydown', function (e) {
                    e.preventDefault();
                });
            },
            file_picker_types: 'image',
            file_picker_callback: function (cb) {
                var input = document.createElement('input');
                input.setAttribute('type', 'file');
                input.setAttribute('accept', 'image/*');

                input.onchange = function () {
                    var file = this.files[0];

                    if (!file) {
                        return;
                    }

                    resizeAndProcessImage(file, cb);
                };

                input.click();
            }
        });


        function resizeAndProcessImage(file, cb) {
            if (file.size > 2 * 1024 * 1024) { // 2MB
                resizeImage(file, 500, function (resizedFile) {
                    processResizedFile(resizedFile, cb);
                });
            } else {
                processResizedFile(file, cb);
            }
        }

        function resizeImage(file, maxSizeKB, callback) {
            var reader = new FileReader();
            reader.onload = function (e) {
                var img = new Image();
                img.src = e.target.result;

                img.onload = function () {
                    var canvas = document.createElement('canvas');
                    var ctx = canvas.getContext('2d');

                    var maxWidth = img.width;
                    var maxHeight = img.height;

                    var ratio = 1;
                    if (img.width > maxWidth) {
                        ratio = maxWidth / img.width;
                    } else if (img.height > maxHeight) {
                        ratio = maxHeight / img.height;
                    }

                    canvas.width = img.width * ratio;
                    canvas.height = img.height * ratio;

                    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);

                    canvas.toBlob(function (blob) {
                        var resizedFile = new File([blob], file.name, { type: file.type });
                        callback(resizedFile);
                    }, file.type, maxSizeKB / 1000);
                };
            };

            reader.readAsDataURL(file);
        }

        function processResizedFile(resizedFile, cb) {
            var id = 'blobid' + (new Date()).getTime();
            var blobCache = tinymce.activeEditor.editorUpload.blobCache;
            var reader = new FileReader();

            reader.onload = function () {
                var base64 = reader.result.split(',')[1];
                var blobInfo = blobCache.create(id, resizedFile, base64);
                blobCache.add(blobInfo);

                cb(blobInfo.blobUri(), { title: resizedFile.name });
            };

            reader.readAsDataURL(resizedFile);
        }
    </script>

}

